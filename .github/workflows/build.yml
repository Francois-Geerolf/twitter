name: Build and Commit Outputs

on:
  push:
    paths:
      - '**.R'
      - '**.Rmd'
      - '_build.R'
  pull_request:
    paths:
      - '**.R'
      - '**.Rmd'
      - '_build.R'
  schedule:
    - cron: '0 3 * * *'   # tous les jours à 03:00 UTC

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup R
        uses: r-lib/actions/setup-r@v2

      - name: 🛠 Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

      - name: 📦 Install Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: 📦 Install required packages with timing and checks
        run: |
          pkgs <- c(
            "ggimage", "countrycode", "httr", "gt", "gtExtras",
            "ggplot2", "dplyr", "tidyr", "readr",
            "purrr", "tibble", "stringr", "forcats",
            "quarto", "readxl", "rsdmx", "tools",
            "knitr", "scales", "viridis", "zoo", "lubridate",
            "ggrepel", "curl", "rmarkdown", "rvest", "jsonlite",
            "here", "i18n", "r2country", "eurostat"
          )
      
          format_time <- function(seconds) {
            minutes <- floor(seconds / 60)
            seconds <- round(seconds %% 60, 1)
            sprintf("%dm %.1fs", minutes, seconds)
          }
      
          times <- numeric(length(pkgs))
          names(times) <- pkgs
          total_time <- proc.time()[3]
      
          for (i in seq_along(pkgs)) {
            pkg <- pkgs[i]
            if (!requireNamespace(pkg, quietly = TRUE)) {
              cat("⏳ Installing", pkg, "\n")
              t <- tryCatch(
                system.time(install.packages(pkg, repos = "https://cloud.r-project.org", quiet = TRUE)),
                error = function(e) NA
              )
              if (!is.na(t[3]) && requireNamespace(pkg, quietly = TRUE)) {
                times[i] <- t[3]
                cat("✅", pkg, "installed in", format_time(t[3]), "\n\n")
              } else {
                times[i] <- NA
                cat("❌ Failed to install", pkg, "\n\n")
              }
            } else {
              times[i] <- 0
              cat("✅", pkg, "already installed\n\n")
            }
          }
      
          total_elapsed <- proc.time()[3] - total_time
          cat("📋 Installation Summary:\n")
          for (i in seq_along(times)) {
            status <- if (is.na(times[i])) "❌ failed" else if (times[i] == 0) "✅ already" else paste0("✅ ", format_time(times[i]))
            cat(sprintf(" - %s: %s\n", names(times)[i], status))
          }
          cat(sprintf("\n🕒 Total time: %s\n", format_time(total_elapsed)))
        shell: Rscript {0}
        
      - name: 🌍 Add fr_FR.UTF-8 locale
        run: |
          sudo apt-get update
          sudo apt-get install -y locales
          sudo locale-gen fr_FR.UTF-8
          sudo update-locale

      - name: ▶️ Run _build.R
        run: Rscript _build.R

      - name: 📤 Commit any updated output (csv, png, pdf, etc.)
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md || true
          [ -d png ] && git add png/*.png || true
          [ -d pdf ] && git add pdf/*.pdf || true
          [ -d csv ] && git add csv/*.csv || true
          git commit -m "Update outputs (CSV, PNG, PDF) [auto]" || echo "No changes to commit"
          git push || echo "No changes to push"